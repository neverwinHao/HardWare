C51 COMPILER V9.54   MAIN                                                                  05/19/2023 13:07:23 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\Objects\main.obj
COMPILER INVOKED BY: D:\keli5\C51\BIN\C51.EXE main.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\main.l
                    -st) OBJECT(.\Objects\main.obj)

line level    source

   1          #include <reg52.h>
   2          #include <string.h>
   3          
   4          // LCD 控制引脚
   5          sbit RS = P2^4;    // RS 连接到 P24
   6          sbit RW = P2^5;    // RW 连接到 P25
   7          sbit E = P2^6;     // E 连接到 P26
   8          sbit REST = P2^7;  // REST 连接到 P27
   9          
  10          // LCD 数据引脚
  11          sbit DB0 = P0^7;   // DB0 连接到 P07
  12          sbit DB1 = P0^6;   // DB1 连接到 P06
  13          sbit DB2 = P0^5;   // DB2 连接到 P05
  14          sbit DB3 = P0^4;   // DB3 连接到 P04
  15          sbit DB4 = P0^3;   // DB4 连接到 P03
  16          sbit DB5 = P0^2;   // DB5 连接到 P02
  17          sbit DB6 = P0^1;   // DB6 连接到 P01
  18          sbit DB7 = P0^0;   // DB7 连接到 P00
  19          
  20          // 函数声明
  21          void Delay5Ms();
  22          void Delay_ms(unsigned int milliseconds);
  23          void Lcd_Init();
  24          void Wr_Command(unsigned char wrcommand, unsigned char busyc);
  25          void Wr_Data(unsigned char wrdata);
  26          void RDbf();
  27          void Display_String(unsigned char line, unsigned char *string);
  28          
  29          void main()
  30          {
  31   1          Lcd_Init();
  32   1          while (1)
  33   1          {
  34   2              Display_String(1, "刘浩测试LCD");
  35   2              Display_String(3, "五月十九日");
  36   2              Display_String(4, "春眠不觉小");
  37   2              Delay_ms(1000); // 增加延迟时间，例如1秒
  38   2          }
  39   1      }
  40          
  41          // 延迟5毫秒
  42          void Delay5Ms()
  43          {
  44   1          unsigned char i, j;
  45   1          i = 54;
  46   1          j = 199;
  47   1          do
  48   1          {
  49   2              while (--j);
  50   2          } while (--i);
  51   1      }
  52          
  53          // 延迟指定的毫秒数
  54          void Delay_ms(unsigned int milliseconds)
C51 COMPILER V9.54   MAIN                                                                  05/19/2023 13:07:23 PAGE 2   

  55          {
  56   1          unsigned int i, j;
  57   1          for (i = 0; i < milliseconds; i++)
  58   1          {
  59   2              for (j = 0; j < 12000; j++)
  60   2              {
  61   3                  // 空循环以消耗时间
  62   3              }
  63   2          }
  64   1      }
  65          
  66          // LCD 初始化
  67          void Lcd_Init(void)
  68          {
  69   1          Delay5Ms();
  70   1          REST = 1;
  71   1          REST = 0;
  72   1          REST = 1;
  73   1          Wr_Command(0x30, 0);
  74   1          Delay5Ms();
  75   1          Wr_Command(0x30, 0);
  76   1          Delay5Ms();
  77   1          Wr_Command(0x0C, 1);
  78   1          Delay5Ms();
  79   1          Wr_Command(0x01, 1);
  80   1          Delay5Ms();
  81   1          Delay5Ms();
  82   1          Wr_Command(0x06, 1);
  83   1          Delay5Ms();
  84   1      }
  85          
  86          // 发送指令到 LCD
  87          void Wr_Command(unsigned char wrcommand, unsigned char busyc)
  88          {
  89   1          if (busyc)
  90   1              RDbf();
  91   1          RS = 0;
  92   1          RW = 0;
  93   1          E = 1;
  94   1          DB7 = wrcommand & 0x80;
  95   1          DB6 = wrcommand & 0x40;
  96   1          DB5 = wrcommand & 0x20;
  97   1          DB4 = wrcommand & 0x10;
  98   1          DB3 = wrcommand & 0x08;
  99   1          DB2 = wrcommand & 0x04;
 100   1          DB1 = wrcommand & 0x02;
 101   1          DB0 = wrcommand & 0x01;
 102   1          E = 0;
 103   1      }
 104          
 105          // 向 LCD 写入数据
 106          void Wr_Data(unsigned char wrdata)
 107          {
 108   1          RDbf();
 109   1          RS = 1;
 110   1          RW = 0;
 111   1          E = 1;
 112   1          DB7 = wrdata & 0x80;
 113   1          DB6 = wrdata & 0x40;
 114   1          DB5 = wrdata & 0x20;
 115   1          DB4 = wrdata & 0x10;
 116   1          DB3 = wrdata & 0x08;
C51 COMPILER V9.54   MAIN                                                                  05/19/2023 13:07:23 PAGE 3   

 117   1          DB2 = wrdata & 0x04;
 118   1          DB1 = wrdata & 0x02;
 119   1          DB0 = wrdata & 0x01;
 120   1          E = 0;
 121   1      }
 122          
 123          // 读取忙标志位
 124          void RDbf(void)
 125          {
 126   1          while (1)
 127   1          {
 128   2              RS = 0;
 129   2              RW = 1;
 130   2              E = 0;
 131   2              E = 1;
 132   2              if ((P0 & 0x01) == 0)
 133   2                  break;
 134   2          }
 135   1      }
 136          
 137          // 在 LCD 上显示字符串
 138          void Display_String(unsigned char line, unsigned char *string)
 139          {
 140   1          unsigned char addr, i;
 141   1          switch (line)
 142   1          {
 143   2              case 1:
 144   2                  addr = 0x80;
 145   2                  break;
 146   2              case 2:
 147   2                  addr = 0x90;
 148   2                  break;
 149   2              case 3:
 150   2                  addr = 0x88;
 151   2                  break;
 152   2              case 4:
 153   2                  addr = 0x98;
 154   2                  break;
 155   2          }
 156   1          Wr_Command(addr, 1);
 157   1          for (i = 0; i < 16; i++)
 158   1          {
 159   2              if (*string)
 160   2                  Wr_Data(*string++);
 161   2              else
 162   2                  Wr_Data(' ');
 163   2          }
 164   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    352    ----
   CONSTANT SIZE    =     34    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       7
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
