C51 COMPILER V9.54   DS1302                                                                07/04/2023 12:50:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: D:\keli5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS13
                    -02.lst) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include "ds1302.h"
   2          
   3          uchar code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
   4          uchar code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   5          
   6          uchar initial_time[7] = {0x00, 0x17, 0x00, 0x01, 0x05, 0x06, 0x23};
   7          
   8          /*
   9          initial_time[0]：秒（Seconds），设置为0x00，表示初始秒数为0。
  10          initial_time[1]：分（Minutes），设置为0x00，表示初始分钟数为0。
  11          initial_time[2]：时（Hours），设置为0x20，表示初始小时数为20。
  12          initial_time[3]：日（Day），设置为0x01，表示初始日期为1号。
  13          initial_time[4]：月（Month），设置为0x06，表示初始月份为6月。
  14          initial_time[5]：星期几（Weekday），设置为0x04，表示初始星期几为4（例如，星期四）。
  15          initial_time[6]：年（Year），设置为0x13，表示初始年份为13。
  16          */
  17          
  18          void Ds1302Write(uchar addr, uchar dat)
  19          {
  20   1          uchar n;
  21   1          RST = 0;
  22   1          _nop_();
  23   1          SCLK = 0;
  24   1          _nop_();
  25   1          RST = 1;
  26   1          _nop_();
  27   1      
  28   1          for (n = 0; n < 8; n++)
  29   1          {
  30   2              DSIO = addr & 0x01;
  31   2              addr >>= 1;
  32   2              SCLK = 1;
  33   2              _nop_();
  34   2              SCLK = 0;
  35   2              _nop_();
  36   2          }
  37   1      
  38   1          for (n = 0; n < 8; n++)
  39   1          {
  40   2              DSIO = dat & 0x01;
  41   2              dat >>= 1;
  42   2              SCLK = 1;
  43   2              _nop_();
  44   2              SCLK = 0;
  45   2              _nop_();
  46   2          }
  47   1      
  48   1          RST = 0;
  49   1          _nop_();
  50   1      }
  51          
  52          uchar Ds1302Read(uchar addr)
  53          {
  54   1          uchar n, dat, dat1;
C51 COMPILER V9.54   DS1302                                                                07/04/2023 12:50:34 PAGE 2   

  55   1          RST = 0;
  56   1          _nop_();
  57   1          SCLK = 0;
  58   1          _nop_();
  59   1          RST = 1;
  60   1          _nop_();
  61   1      
  62   1          for (n = 0; n < 8; n++)
  63   1          {
  64   2              DSIO = addr & 0x01;
  65   2              addr >>= 1;
  66   2              SCLK = 1;
  67   2              _nop_();
  68   2              SCLK = 0;
  69   2              _nop_();
  70   2          }
  71   1      
  72   1          _nop_();
  73   1      
  74   1          for (n = 0; n < 8; n++)
  75   1          {
  76   2              dat1 = DSIO;
  77   2              dat = (dat >> 1) | (dat1 << 7);
  78   2              SCLK = 1;
  79   2              _nop_();
  80   2              SCLK = 0;
  81   2              _nop_();
  82   2          }
  83   1      
  84   1          RST = 0;
  85   1          _nop_();
  86   1          SCLK = 1;
  87   1          _nop_();
  88   1          DSIO = 0;
  89   1          _nop_();
  90   1          DSIO = 1;
  91   1          _nop_();
  92   1      
  93   1          return dat;
  94   1      }
  95          
  96          void Ds1302Init()
  97          {
  98   1          uchar n;
  99   1          uchar saved_time[7];
 100   1      
 101   1          // 读取DS1302中保存的时间
 102   1          for (n = 0; n < 7; n++)
 103   1          {
 104   2              saved_time[n] = Ds1302Read(READ_RTC_ADDR[n]);
 105   2          }
 106   1      
 107   1          // 如果DS1302中的时间有效，则使用保存的时间作为初始时间
 108   1          if (saved_time[6] != 0x00)
 109   1          {
 110   2              for (n = 0; n < 7; n++)
 111   2              {
 112   3                  initial_time[n] = saved_time[n];
 113   3              }
 114   2          }
 115   1      
 116   1          // 设置初始时间
C51 COMPILER V9.54   DS1302                                                                07/04/2023 12:50:34 PAGE 3   

 117   1          Ds1302Write(0x8E, 0x00);
 118   1          for (n = 0; n < 7; n++)
 119   1          {
 120   2              Ds1302Write(WRITE_RTC_ADDR[n], initial_time[n]);
 121   2          }
 122   1          Ds1302Write(0x8E, 0x80);
 123   1      }
 124          
 125          
 126          void read_time(uchar *timedata)
 127          {
 128   1          uchar i, tmp;
 129   1      
 130   1          for (i = 0; i < 7; i++)
 131   1          {
 132   2              timedata[i] = Ds1302Read(READ_RTC_ADDR[i]);
 133   2          }
 134   1      
 135   1          for (i = 0; i < 7; i++)
 136   1          {
 137   2              tmp = timedata[i];
 138   2              timedata[i] = (tmp / 16 % 10) * 10;
 139   2              timedata[i] += (tmp % 16);
 140   2          }
 141   1      }
 142          
 143          void TimeToChar(TIME *timedata, uchar pmFlag)
 144          {
 145   1              timedata->date[0]=2+'0';
 146   1              timedata->date[1]='0';
 147   1              timedata->date[2]=timedata->year/10+'0';
 148   1              timedata->date[3]=timedata->year%10+'0';
 149   1              timedata->date[4]='-';
 150   1              timedata->date[5]=timedata->mon/10+'0';
 151   1              timedata->date[6]=timedata->mon%10+'0';
 152   1              timedata->date[7]='-';
 153   1              timedata->date[8]=timedata->day/10+'0';
 154   1              timedata->date[9]=timedata->day%10+'0';
 155   1              timedata->date[10]='\0';
 156   1              timedata->times[0]=timedata->hour/10+'0';
 157   1              timedata->times[1]=timedata->hour%10+'0';
 158   1              timedata->times[2]=':';
 159   1              timedata->times[3]=timedata->min/10+'0';
 160   1              timedata->times[4]=timedata->min%10+'0';
 161   1              timedata->times[5]=':';
 162   1              timedata->times[6]=timedata->sec/10+'0';
 163   1              timedata->times[7]=timedata->sec%10+'0';
 164   1              timedata->times[8]='\0';
 165   1              if(pmFlag==1)
 166   1              {       if(timedata->hour>12)
 167   2                      {       timedata->times[0]=((timedata->hour-12)/10)+'0';
 168   3                              timedata->times[1]=(timedata->hour-12)%10+'0';} 
 169   2              }
 170   1      }
 171          
 172          void set_time(uchar *timedata)
 173          {
 174   1          uchar i, tmp, tmps[7];
 175   1          for (i = 0; i < 7; i++)
 176   1          {
 177   2              tmp = timedata[i];
 178   2              tmps[i] = (tmp / 10 << 4) + (tmp % 10);
C51 COMPILER V9.54   DS1302                                                                07/04/2023 12:50:34 PAGE 4   

 179   2          }
 180   1          Ds1302Write(0x8E, 0x00);
 181   1          for (i = 0; i < 7; i++)
 182   1          {
 183   2              Ds1302Write(WRITE_RTC_ADDR[i], tmps[i]);
 184   2          }
 185   1          Ds1302Write(0x8E, 0x80);
 186   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    709    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      24
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
