C51 COMPILER V9.54   LCD12864                                                              07/04/2023 12:50:34 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE LCD12864
OBJECT MODULE PLACED IN .\Objects\lcd12864.obj
COMPILER INVOKED BY: D:\keli5\C51\BIN\C51.EXE lcd12864.c OPTIMIZE(9,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\lc
                    -d12864.lst) OBJECT(.\Objects\lcd12864.obj)

line level    source

   1          #include <reg52.h>
   2          #include <string.h>
   3          #include "lunarword.h"
   4          
   5          // LCD 控制引脚
   6          sbit RS = P2^4;    // RS 连接到 P24
   7          sbit RW = P2^5;    // RW 连接到 P25
   8          sbit E = P2^6;     // E 连接到 P26
   9          sbit REST = P2^7;  // REST 连接到 P27
  10          
  11          // LCD 数据引脚
  12          sbit DB0 = P0^7;   // DB0 连接到 P07
  13          sbit DB1 = P0^6;   // DB1 连接到 P06
  14          sbit DB2 = P0^5;   // DB2 连接到 P05
  15          sbit DB3 = P0^4;   // DB3 连接到 P04
  16          sbit DB4 = P0^3;   // DB4 连接到 P03
  17          sbit DB5 = P0^2;   // DB5 连接到 P02
  18          sbit DB6 = P0^1;   // DB6 连接到 P01
  19          sbit DB7 = P0^0;   // DB7 连接到 P00
  20          
  21          // 函数声明
  22          void Delay5Ms();
  23          void Delay_ms(unsigned int milliseconds);
  24          void Lcd_Init();
  25          void LCD_WriteCommand(unsigned char wrcommand, unsigned char busyc);
  26          void Wr_Data(unsigned char wrdata);
  27          void RDbf();
  28          void LCD_ShowString(unsigned char line, unsigned char *string);
  29          void LCD_ShowChar(unsigned char line, unsigned char pos, unsigned char* str);
  30          void LCD_ShowNum(unsigned char line, unsigned char x, unsigned int num, unsigned char length);
  31          void LCD_SetCursor(unsigned char line, unsigned char pos);
  32          
  33          // 延迟5毫秒
  34          void Delay5Ms()
  35          {
  36   1          unsigned char i, j;
  37   1          i = 54;
  38   1          j = 199;
  39   1          do
  40   1          {
  41   2              while (--j);
  42   2          } while (--i);
  43   1      }
  44          
  45          // 延迟指定的毫秒数
  46          void Delay_ms(unsigned int milliseconds)
  47          {
  48   1          unsigned int i, j;
  49   1          for (i = 0; i < milliseconds; i++)
  50   1          {
  51   2              for (j = 0; j < 12000; j++)
  52   2              {
  53   3                  // 空循环以消耗时间
  54   3              }
C51 COMPILER V9.54   LCD12864                                                              07/04/2023 12:50:34 PAGE 2   

  55   2          }
  56   1      }
  57          
  58          // LCD 初始化
  59          void Lcd_Init(void)
  60          {
  61   1          Delay5Ms();
  62   1          REST = 1;
  63   1          REST = 0;
  64   1          REST = 1;
  65   1          LCD_WriteCommand(0x30, 0);
  66   1          Delay5Ms();
  67   1          LCD_WriteCommand(0x30, 0);
  68   1          Delay5Ms();
  69   1          LCD_WriteCommand(0x0C, 1);
  70   1          Delay5Ms();
  71   1          LCD_WriteCommand(0x01, 1);
  72   1          Delay5Ms();
  73   1          Delay5Ms();
  74   1          LCD_WriteCommand(0x06, 1);
  75   1          Delay5Ms();
  76   1      }
  77          
  78          // 发送指令到 LCD LCD_WriteCommand
  79          void LCD_WriteCommand(unsigned char wrcommand, unsigned char busyc)
  80          {
  81   1          if (busyc)
  82   1              RDbf();
  83   1          RS = 0;
  84   1          RW = 0;
  85   1          E = 1;
  86   1          DB7 = wrcommand & 0x80;
  87   1          DB6 = wrcommand & 0x40;
  88   1          DB5 = wrcommand & 0x20;
  89   1          DB4 = wrcommand & 0x10;
  90   1          DB3 = wrcommand & 0x08;
  91   1          DB2 = wrcommand & 0x04;
  92   1          DB1 = wrcommand & 0x02;
  93   1          DB0 = wrcommand & 0x01;
  94   1          E = 0;
  95   1      }
  96          
  97          // 向 LCD 写入数据
  98          void Wr_Data(unsigned char wrdata)
  99          {
 100   1          RDbf();
 101   1          RS = 1;
 102   1          RW = 0;
 103   1          E = 1;
 104   1          DB7 = wrdata & 0x80;
 105   1          DB6 = wrdata & 0x40;
 106   1          DB5 = wrdata & 0x20;
 107   1          DB4 = wrdata & 0x10;
 108   1          DB3 = wrdata & 0x08;
 109   1          DB2 = wrdata & 0x04;
 110   1          DB1 = wrdata & 0x02;
 111   1          DB0 = wrdata & 0x01;
 112   1          E = 0;
 113   1      }
 114          
 115          // 读取忙标志位
 116          void RDbf(void)
C51 COMPILER V9.54   LCD12864                                                              07/04/2023 12:50:34 PAGE 3   

 117          {
 118   1          while (1)
 119   1          {
 120   2              RS = 0;
 121   2              RW = 1;
 122   2              E = 0;
 123   2              E = 1;
 124   2              if ((P0 & 0x01) == 0)
 125   2                  break;
 126   2          }
 127   1      }
 128          
 129          // 在 LCD 上显示字符串
 130          void LCD_ShowString(unsigned char line, unsigned char *string)
 131          {
 132   1          unsigned char addr, i;
 133   1          switch (line)
 134   1          {
 135   2              case 1:
 136   2                  addr = 0x80;
 137   2                  break;
 138   2              case 2:
 139   2                  addr = 0x90;
 140   2                  break;
 141   2              case 3:
 142   2                  addr = 0x88;
 143   2                  break;
 144   2              case 4:
 145   2                  addr = 0x98;
 146   2                  break;
 147   2          }
 148   1          LCD_WriteCommand(addr, 1);
 149   1          for (i = 0; i < 16; i++)
 150   1          {
 151   2              if (*string)
 152   2                  Wr_Data(*string++);
 153   2              else
 154   2                  Wr_Data(' ');
 155   2          }
 156   1      }
 157          
 158          // 在 LCD 上显示数字
 159          void LCD_ShowNum(unsigned char line, unsigned char x, unsigned int num, unsigned char length)
 160          {
 161   1          unsigned char str[6] = "     ";
 162   1          unsigned char i = 0;
 163   1          unsigned int temp = num;  // 保存原始数字
 164   1      
 165   1          // 从高位开始存储数字
 166   1          while (temp > 0)
 167   1          {
 168   2              str[length - 1 - i] = temp % 10 + '0';
 169   2              temp /= 10;
 170   2              i++;
 171   2          }
 172   1      
 173   1          // 在位数小于输入位数时，在数字前补零
 174   1          while (i < length)
 175   1          {
 176   2              str[length - 1 - i] = '0';
 177   2              i++;
 178   2          }
C51 COMPILER V9.54   LCD12864                                                              07/04/2023 12:50:34 PAGE 4   

 179   1      
 180   1          str[length] = '\0';
 181   1      
 182   1          LCD_SetCursor(line, x);  // 设置光标位置
 183   1      
 184   1          for (i = 0; i < length; i++)
 185   1          {
 186   2              Wr_Data(str[i]);
 187   2          }
 188   1      }
 189          
 190          
 191          
 192          
 193          // LCD 设置光标位置
 194          void LCD_SetCursor(unsigned char line, unsigned char pos)
 195          {
 196   1          unsigned char addr;
 197   1          switch (line)
 198   1          {
 199   2              case 1:
 200   2                  addr = 0x80 + pos - 1;
 201   2                  break;
 202   2              case 2:
 203   2                  addr = 0x90 + pos - 1;
 204   2                  break;
 205   2              case 3:
 206   2                  addr = 0x88 + pos - 1;
 207   2                  break;
 208   2              case 4:
 209   2                  addr = 0x98 + pos - 1;
 210   2                  break;
 211   2              default:
 212   2                  return; // 非法行数，直接返回
 213   2          }
 214   1          LCD_WriteCommand(addr, 1);
 215   1      }
 216          
 217          
 218          void LCD_ClearScreen()
 219          {
 220   1              LCD_ShowString(1,"                 ");
 221   1              LCD_ShowString(2,"                 ");
 222   1              LCD_ShowString(3,"                 ");
 223   1              LCD_ShowString(4,"                 ");
 224   1      }
 225          
 226          // 在 LCD 上显示字符
 227          void LCD_ShowChar(unsigned char line, unsigned char pos, unsigned char* str)
 228          {
 229   1          unsigned char addr;
 230   1          unsigned char i = 0;
 231   1          switch (line)
 232   1          {
 233   2              case 1:
 234   2                  addr = 0x80 + pos - 1;
 235   2                  break;
 236   2              case 2:
 237   2                  addr = 0x90 + pos - 1;
 238   2                  break;
 239   2              case 3:
 240   2                  addr = 0x88 + pos - 1;
C51 COMPILER V9.54   LCD12864                                                              07/04/2023 12:50:34 PAGE 5   

 241   2                  break;
 242   2              case 4:
 243   2                  addr = 0x98 + pos - 1;
 244   2                  break;
 245   2              default:
 246   2                  return; // 非法行数，直接返回
 247   2          }
 248   1          LCD_WriteCommand(addr, 1);
 249   1          
 250   1          // 先写入指定位置的字符
 251   1          while (*str && i < 16 - pos)
 252   1          {
 253   2              Wr_Data(*str++);
 254   2              i++;
 255   2          }
 256   1              Delay_ms(2);
 257   1      }
 258          
 259          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    634    ----
   CONSTANT SIZE    =     24    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      28
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
