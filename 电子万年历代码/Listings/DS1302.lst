C51 COMPILER V9.54   DS1302                                                                05/23/2023 15:57:19 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DS1302
OBJECT MODULE PLACED IN .\Objects\DS1302.obj
COMPILER INVOKED BY: D:\keli5\C51\BIN\C51.EXE DS1302.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\DS13
                    -02.lst) OBJECT(.\Objects\DS1302.obj)

line level    source

   1          #include "ds1302.h"
   2          
   3          uchar code READ_RTC_ADDR[7] = {0x81, 0x83, 0x85, 0x87, 0x89, 0x8b, 0x8d};
   4          uchar code WRITE_RTC_ADDR[7] = {0x80, 0x82, 0x84, 0x86, 0x88, 0x8a, 0x8c};
   5          
   6          uchar initial_time[7] = {0x00, 0x09, 0x10, 0x20, 0x05, 0x04, 0x22};
   7          
   8          void Ds1302Write(uchar addr, uchar dat)
   9          {
  10   1          uchar n;
  11   1          RST = 0;
  12   1          _nop_();
  13   1          SCLK = 0;
  14   1          _nop_();
  15   1          RST = 1;
  16   1          _nop_();
  17   1      
  18   1          for (n = 0; n < 8; n++)
  19   1          {
  20   2              DSIO = addr & 0x01;
  21   2              addr >>= 1;
  22   2              SCLK = 1;
  23   2              _nop_();
  24   2              SCLK = 0;
  25   2              _nop_();
  26   2          }
  27   1      
  28   1          for (n = 0; n < 8; n++)
  29   1          {
  30   2              DSIO = dat & 0x01;
  31   2              dat >>= 1;
  32   2              SCLK = 1;
  33   2              _nop_();
  34   2              SCLK = 0;
  35   2              _nop_();
  36   2          }
  37   1      
  38   1          RST = 0;
  39   1          _nop_();
  40   1      }
  41          
  42          uchar Ds1302Read(uchar addr)
  43          {
  44   1          uchar n, dat, dat1;
  45   1          RST = 0;
  46   1          _nop_();
  47   1          SCLK = 0;
  48   1          _nop_();
  49   1          RST = 1;
  50   1          _nop_();
  51   1      
  52   1          for (n = 0; n < 8; n++)
  53   1          {
  54   2              DSIO = addr & 0x01;
C51 COMPILER V9.54   DS1302                                                                05/23/2023 15:57:19 PAGE 2   

  55   2              addr >>= 1;
  56   2              SCLK = 1;
  57   2              _nop_();
  58   2              SCLK = 0;
  59   2              _nop_();
  60   2          }
  61   1      
  62   1          _nop_();
  63   1      
  64   1          for (n = 0; n < 8; n++)
  65   1          {
  66   2              dat1 = DSIO;
  67   2              dat = (dat >> 1) | (dat1 << 7);
  68   2              SCLK = 1;
  69   2              _nop_();
  70   2              SCLK = 0;
  71   2              _nop_();
  72   2          }
  73   1      
  74   1          RST = 0;
  75   1          _nop_();
  76   1          SCLK = 1;
  77   1          _nop_();
  78   1          DSIO = 0;
  79   1          _nop_();
  80   1          DSIO = 1;
  81   1          _nop_();
  82   1      
  83   1          return dat;
  84   1      }
  85          
  86          void Ds1302Init()
  87          {
  88   1          uchar n;
  89   1          Ds1302Write(0x8E, 0x00);
  90   1      
  91   1          for (n = 0; n < 7; n++)
  92   1          {
  93   2              Ds1302Write(WRITE_RTC_ADDR[n], initial_time[n]);
  94   2          }
  95   1      
  96   1          Ds1302Write(0x8E, 0x80);
  97   1      }
  98          
  99          void read_time(uchar *timedata)
 100          {
 101   1          uchar i, tmp;
 102   1      
 103   1          for (i = 0; i < 7; i++)
 104   1          {
 105   2              timedata[i] = Ds1302Read(READ_RTC_ADDR[i]);
 106   2          }
 107   1      
 108   1          for (i = 0; i < 7; i++)
 109   1          {
 110   2              tmp = timedata[i];
 111   2              timedata[i] = (tmp / 16 % 10) * 10;
 112   2              timedata[i] += (tmp % 16);
 113   2          }
 114   1      }
 115          
 116          void turninto(TIME *timedata)
C51 COMPILER V9.54   DS1302                                                                05/23/2023 15:57:19 PAGE 3   

 117          {
 118   1          timedata->date[0] = '2';
 119   1          timedata->date[1] = '0';
 120   1          timedata->date[2] = timedata->year / 10 + '0';
 121   1          timedata->date[3] = timedata->year % 10 + '0';
 122   1          timedata->date[4] = '-';
 123   1          timedata->date[5] = timedata->mon / 10 + '0';
 124   1          timedata->date[6] = timedata->mon % 10 + '0';
 125   1          timedata->date[7] = '-';
 126   1          timedata->date[8] = timedata->day / 10 + '0';
 127   1          timedata->date[9] = timedata->day % 10 + '0';
 128   1          timedata->date[10] = '\0';
 129   1      
 130   1          timedata->times[0] = timedata->hour / 10 + '0';
 131   1          timedata->times[1] = timedata->hour % 10 + '0';
 132   1          timedata->times[2] = ':';
 133   1          timedata->times[3] = timedata->min / 10 + '0';
 134   1          timedata->times[4] = timedata->min % 10 + '0';
 135   1          timedata->times[5] = ':';
 136   1          timedata->times[6] = timedata->sec / 10 + '0';
 137   1          timedata->times[7] = timedata->sec % 10 + '0';
 138   1          timedata->times[8] = '\0';
 139   1      }
 140          
 141          void set_time(uchar *timedata)
 142          {
 143   1          uchar i, tmp, tmps[7];
 144   1      
 145   1          for (i = 0; i < 7; i++)
 146   1          {
 147   2              tmp = timedata[i];
 148   2              tmps[i] = (tmp / 10 << 4) + (tmp % 10);
 149   2          }
 150   1      
 151   1          Ds1302Write(0x8E, 0x00);
 152   1      
 153   1          for (i = 0; i < 7; i++)
 154   1          {
 155   2              Ds1302Write(WRITE_RTC_ADDR[i], tmps[i]);
 156   2          }
 157   1      
 158   1          Ds1302Write(0x8E, 0x80);
 159   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    675    ----
   CONSTANT SIZE    =     14    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      7      14
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
